rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Default: Deny all reads and writes by default.
    match /{document=**} {
      allow read, write: if false;
    }

    // Stalls Collection:
    // Allow authenticated users to read.
    // Allow authenticated users to update (specifically for stock decrement by sellers/admins)
    // Allow authenticated users (assumed admin) to create/delete - refine if needed.
    match /stalls/{stallId} {
      allow read: if request.auth != null;
      // Allow update if user is authenticated (covers sellers decrementing stock via transaction)
      // Consider adding role checks if needed: request.auth.token.admin == true
      allow update: if request.auth != null; 
      // Allow create/delete only for admins (example check)
      // allow create, delete: if request.auth != null && request.auth.token.admin == true;
      // For simplicity, allowing authenticated write for now, assuming transactions handle seller logic.
       allow write: if request.auth != null; 
    }

    // Sales Collection:
    // Allow authenticated users (sellers/admins) to create sales records via the transaction.
    // Allow authenticated users (admins) to read sales data.
    // Disallow updates and deletes for sales records for now.
    match /sales/{saleId} {
      // create is handled within the transaction, but rule still needed
      allow create: if request.auth != null; 
      allow read: if request.auth != null; // Allow authenticated users to read sales
      allow update, delete: if false;
    }
  }
}
